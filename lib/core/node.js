// Generated by CoffeeScript 1.10.0
(function() {
  var Identified, Node, _, defaults, json, log, p, pjson, ref,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ref = require('lightsaber/lib/log'), json = ref.json, log = ref.log, p = ref.p, pjson = ref.pjson;

  defaults = (_ = require('lodash')).defaults;

  Identified = require('./identified');

  Node = (function(superClass) {
    extend(Node, superClass);

    function Node(_data, args) {
      this._data = _data != null ? _data : {};
      if (args == null) {
        args = {};
      }
      this.setKey(args);
    }

    Node.prototype.id = function() {
      return this._data.id || this._id;
    };

    Node.prototype.name = function() {
      return this._data.name;
    };

    Node.prototype.get = function(propertyName) {
      return _.get(this._data, propertyName);
    };

    Node.prototype.set = function(propertyName, propertyValue) {
      return this._data[propertyName] = propertyValue;
    };

    Node.prototype.data = function() {
      return defaults(this._data, {
        id: this.id()
      });
    };

    return Node;

  })(Identified);

  module.exports = Node;

}).call(this);
